<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Manage Bookings</title>
  <link rel="stylesheet" href="/css/manageBookings.css" />
  <style>
    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.6);
      justify-content: center;
      align-items: center;
    }
    .modal-content {
      background: #fff;
      padding: 20px;
      border-radius: 10px;
      min-width: 300px;
    }
    .modal-content input,
    .modal-content select {
      display: block;
      margin: 10px 0;
      width: 100%;
    }
  </style>
</head>
<body>

  <div class="controls">
    <select id="bookingTypeFilter">
      <option value="all">All Booking Types</option>
      <option value="Dine-In">Dine-In</option>
      <option value="Takeaway">Takeaway</option>
    </select>

    <select id="tableLocationFilter">
      <option value="all">All Table Locations</option>
      <option value="VIP">VIP</option>
      <option value="Regular">Regular</option>
      <option value="Outdoor">Outdoor</option>
    </select>

    <select id="statusFilter">
      <option value="all">All Status</option>
      <option value="Pending">Pending</option>
      <option value="Completed">Completed</option>
      <option value="Cancelled">Cancelled</option>
    </select>
  </div>

  <div class="table-container">
    <table>
      <thead>
        <tr>
          <th>Full Name</th>
          <th>Email</th>
          <th>Phone Number</th>
          <th>Booking Type</th>
          <th>Table Location</th>
          <th>Date</th>
          <th>Time</th>
          <th>Until</th>
          <th>Guests</th>
          <th>Status</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody id="bookingTableBody">
        <% bookings.forEach(function(booking) { %>
          <tr data-id="<%= booking.id %>">
            <td><%= booking.Customer_FirstName %> <%= booking.Customer_LastName %></td>
            <td><%= booking.Email %></td>
            <td><%= booking.Phone_Number %></td>
            <td><%= booking.Booking_Type %></td>
            <td><%= booking.Table_Location %></td>
            <td><%= booking.Date.toLocaleDateString() %></td>
            <td><%= booking.Time %></td>
            <td><%= booking.Until %></td>
            <td><%= booking.guests %></td>
            <td><%= booking.status %></td>
            <td>
              <div class="action-buttons">
                <button class="updatebtn">Update</button>
                <button class="deletebtn">Delete</button>
              </div>
            </td>
          </tr>
        <% }); %>
      </tbody>
    </table>
  </div>

  <div class="pagination"></div>

  <!-- Update Modal -->
  <div class="modal" id="updateModal">
    <div class="modal-content">
      <h3>Update Booking</h3>
      <input type="text" id="updateName" placeholder="Full Name" disabled />
      <select id="updateStatus">
        <option value="Pending">Pending</option>
        <option value="Completed">Completed</option>
        <option value="Cancelled">Cancelled</option>
      </select>
      <button id="saveUpdateBtn">Save</button>
      <button id="closeModalBtn">Cancel</button>
    </div>
  </div>

<script>
  const rowsPerPage = 5;
  let currentPage = 1;
  let currentRow = null;
  let currentRowId = null;

  function getFilteredRows() {
    const bookingType = document.getElementById('bookingTypeFilter').value.toLowerCase();
    const tableLocation = document.getElementById('tableLocationFilter').value.toLowerCase();
    const status = document.getElementById('statusFilter').value.toLowerCase();

    const allRows = Array.from(document.querySelectorAll('#bookingTableBody tr'));

    return allRows.filter(row => {
      const typeText = row.children[3].textContent.toLowerCase();
      const locationText = row.children[4].textContent.toLowerCase();
      const statusText = row.children[9].textContent.toLowerCase();

      const matchesType = bookingType === 'all' || typeText === bookingType;
      const matchesLocation = tableLocation === 'all' || locationText === tableLocation;
      const matchesStatus = status === 'all' || statusText === status;

      return matchesType && matchesLocation && matchesStatus;
    });
  }

  function renderTable() {
    const allRows = Array.from(document.querySelectorAll('#bookingTableBody tr'));
    allRows.forEach(row => row.style.display = 'none');

    const filtered = getFilteredRows();
    const totalPages = Math.ceil(filtered.length / rowsPerPage);

    if (currentPage > totalPages) currentPage = totalPages || 1;

    const start = (currentPage - 1) * rowsPerPage;
    const end = start + rowsPerPage;

    filtered.slice(start, end).forEach(row => row.style.display = '');

    renderPagination(totalPages);
  }

  function renderPagination(totalPages) {
    const pagination = document.querySelector('.pagination');
    pagination.innerHTML = '';

    for (let i = 1; i <= totalPages; i++) {
      const btn = document.createElement('button');
      btn.textContent = i;
      if (i === currentPage) btn.classList.add('active');
      btn.addEventListener('click', () => {
        currentPage = i;
        renderTable();
      });
      pagination.appendChild(btn);
    }
  }

  async function saveUpdate() {
    const status = document.getElementById('updateStatus').value;
    if (!currentRowId) return;

    try {
      const res = await fetch(`/admin/bookings/${currentRowId}`, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ status })
      });

      const data = await res.json();
      if (data.success) {
        currentRow.children[9].textContent = status;
        closeModal();
        renderTable();
      } else {
        alert(data.message || 'Failed to update booking');
      }
    } catch (err) {
      console.error(err);
      alert('Error updating booking');
    }
  }

  function closeModal() {
    document.getElementById('updateModal').style.display = 'none';
    currentRow = null;
    currentRowId = null;
  }

  function attachEventListeners() {
    document.getElementById('bookingTypeFilter').addEventListener('change', () => {
      currentPage = 1;
      renderTable();
    });

    document.getElementById('tableLocationFilter').addEventListener('change', () => {
      currentPage = 1;
      renderTable();
    });

    document.getElementById('statusFilter').addEventListener('change', () => {
      currentPage = 1;
      renderTable();
    });

    document.querySelector('#bookingTableBody').addEventListener('click', async e => {
      const row = e.target.closest('tr');
      const id = row?.dataset?.id;

      if (!id) return;

      if (e.target.classList.contains('updatebtn')) {
        currentRow = row;
        currentRowId = id;
        document.getElementById('updateName').value = row.children[0].textContent;
        document.getElementById('updateStatus').value = row.children[9].textContent;
        document.getElementById('updateModal').style.display = 'flex';
      }

      if (e.target.classList.contains('deletebtn')) {
        if (confirm('Are you sure you want to delete this booking?')) {
          try {
            const res = await fetch(`/admin/bookings/${id}`, { method: 'DELETE' });
            const data = await res.json();
            if (data.success) {
              row.remove();
              renderTable();
            } else {
              alert(data.message || 'Failed to delete booking');
            }
          } catch (err) {
            console.error(err);
            alert('Error deleting booking');
          }
        }
      }
    });

    document.getElementById('saveUpdateBtn').addEventListener('click', saveUpdate);
    document.getElementById('closeModalBtn').addEventListener('click', closeModal);
  }

  document.addEventListener('DOMContentLoaded', () => {
    attachEventListeners();
    renderTable();
  });
</script>

</body>
</html>
